Some dreams about the Python interface:

1. Need a specification generation function
2. Need the run module function
3. Need to update how the modules are processed to allow an alternate
   mechanism for locating specifications.
4. What to do with model estimation (probably want to create the future interface
   for that) - how to locate the estimation

Basic idea is that RunModule includes the VEPython package, and then we need to
look up the list of available modules, compare that to the module name selected
in the RunModule statement, and pull out the pieces for processing.

We have a PythonPath element created in visioneval.cnf (at the global/library
level), perhaps using the same mechanism we will eventually use to create local data.
So each module goes through an interface function to look for its data (using the
default R approach to get data from the package - the module should be an implicit
option on that).